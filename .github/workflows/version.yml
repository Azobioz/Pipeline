name: Update version

on:
  pull_request:
    branches:
      - master

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
       # Клонирует репозиторий
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Получаем полную историю комитов для анализа

        # Устонавливает Python
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

       # Определяем тип обновления из заголовка PR
      - name: What type of update
        id: update-type
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ "$PR_TITLE" =~ "[major]" ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif [[ "$PR_TITLE" =~ "[minor]" ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi

       # Запуск Python-файла для обновления версии
      - name: Update version
        run: |
          echo "${{ steps.update-type.outputs.type }}" | python version_up.py

      # Коммит изменения
      - name: Commit of version changes
        run: |
         git config --global user.name "GitHub Action"
         git config --global user.email "action@github.com"
         git checkout ${{ github.head_ref }}  
         git add version version_log
         git commit -m "Update version to $(cat version) [${{ steps.update-type.outputs.type }}]"
         git push origin ${{ github.head_ref }}

        # Создание label с новой версией
      - name: Creating label with new version
        run: |
          NEW_VERSION=$(cat version)
          git tag "v$NEW_VERSION"
          git push origin "v$NEW_VERSION"
