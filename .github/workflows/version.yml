name: Versioning Workflow

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - master

jobs:
  version-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Determine update type
        id: update-type
        run: |
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          if [[ "$LAST_COMMIT_MESSAGE" == *"feature"* ]]; then
            echo "update_type=minor" >> $GITHUB_OUTPUT
          elif [[ "$LAST_COMMIT_MESSAGE" == *"hotfix"* ]]; then
            echo "update_type=patch" >> $GITHUB_OUTPUT
          else
            echo "update_type=none" >> $GITHUB_OUTPUT
          fi

      - name: Run versioning script for push
        if: github.event_name == 'push' && steps.update-type.outputs.update_type != 'none'
        run: |
          echo "${{ steps.update-type.outputs.update_type }}" | python version_up.py

      - name: Initialize or update version for PR
        if: github.event_name == 'pull_request'
        run: |
          # Инициализация или обновление version и version_log
          if [ ! -f version ]; then
            echo "1.0.0" > version
          fi
          if [ ! -f version_log ]; then
            touch version_log
          fi
          UPDATE_TYPE=${{ steps.update-type.outputs.update_type }}
          echo "$UPDATE_TYPE" | python version_up.py

      - name: Get last version log entry
        id: last-log
        run: |
          LAST_LOG=$(tail -n 1 version_log || echo "")
          if [ -z "$LAST_LOG" ]; then
            echo "last_log=[1.0.0] <-- [1.0.0] [$(date -u +'%Y-%m-%d %H:%M:%S')] none" >> $GITHUB_OUTPUT
          else
            echo "last_log=$LAST_LOG" >> $GITHUB_OUTPUT
          fi

      - name: Commit version updates
        if: github.event_name == 'push' && steps.update-type.outputs.update_type != 'none' || github.event_name == 'pull_request'
        run: |
          git config --global user.name 'bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add version version_log
          git commit -m "${{ steps.last-log.outputs.last_log }}" || echo "No changes to commit"
          git push origin ${{ github.head_ref || github.ref_name }}

      - name: Add new version label to PR
        if: github.event_name == 'pull_request'
        run: |
          if [ ! -f version ]; then
            echo "1.0.0" > version
            git add version
            git commit -m "Initialize version file"
            git push origin ${{ github.head_ref }}
          fi
          NEW_VERSION=$(cat version)
          gh pr edit ${{ github.event.pull_request.number }} --add-label "version-$NEW_VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
