name: Update changelog

on:
  workflow_run:
    workflows: ["Update version"]
    types:
      - completed

jobs:
  update-changelog:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (master)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: master
          fetch-depth: 0  

      - name: Get current version
        id: version
        run: |
          if [ -f version ]; then
            echo "current_version=$(cat version)" >> $GITHUB_OUTPUT
          else
            echo "Error: version file not found"
            exit 1
          fi

      - name: Get branch name
        id: branch
        run: |
          echo "branch_name=${{ github.event.workflow_run.head_branch }}" >> $GITHUB_OUTPUT

      - name: Get PR commits
        id: commits
        run: |
          PR_NUMBER="${{ github.event.workflow_run.pull_requests[0].number }}"
          if [ -z "$PR_NUMBER" ]; then
            echo "No PR found, using head_sha commits"
            HEAD_SHA="${{ github.event.workflow_run.head_sha }}"
            COMMITS=$(git log --pretty=format:'%cd %s' --date=format:'%H:%M - %d.%m.%Y' $HEAD_SHA -1)
          else
            COMMITS_DATA=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/commits")
            COMMITS=$(echo "$COMMITS_DATA" | jq -r '.[] | [.commit.committer.date, .commit.message] | join(" ")' | sed 's/T[0-9:]*Z/ /' | sed 's/^\([0-9:]*\) /\1 - /' | sed 's/ - / /')
          fi
          echo "commits=$COMMITS" >> $GITHUB_OUTPUT

      - name: Update changelog.md for master
        run: |
          CURRENT_TIME=$(date '+%H:%M')
          CURRENT_DATE=$(date '+%d.%m.%Y')
          VERSION="${{ steps.version.outputs.current_version }}"
          BRANCH="${{ steps.branch.outputs.branch_name }}"
          COMMITS="${{ steps.commits.outputs.commits }}"

          TEMP_FILE=$(mktemp)
          echo "Changelog" > "${TEMP_FILE}"
          echo "" >> "${TEMP_FILE}"  

          LATEST_DATE=$(echo "$COMMITS" | head -n 1 | cut -d' ' -f1)
          if [ -z "$LATEST_DATE" ]; then
            LATEST_DATE="${CURRENT_TIME} - ${CURRENT_DATE}"
          fi
          NEW_ENTRY="[${LATEST_DATE} ${VERSION} ${BRANCH}]"
          CHANGES=$(echo "$COMMITS" | cut -d' ' -f2- | sed 's/^/- /; s/$/\n/' | sed '/^-$/d' | sort -u)
          if [ -z "$CHANGES" ]; then
            CHANGES="- No changes specified"
          fi

          echo "${NEW_ENTRY}" >> "${TEMP_FILE}"
          echo "---" >> "${TEMP_FILE}"
          echo "${CHANGES}" >> "${TEMP_FILE}"

          if [ -f changelog.md ]; then
            echo "" >> "${TEMP_FILE}" 
            cat changelog.md >> "${TEMP_FILE}"
          fi

          mv "${TEMP_FILE}" changelog.md
          git add changelog.md

      - name: Commit changes to master
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git commit -m "
