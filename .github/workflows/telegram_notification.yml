name: Telegram notification

on:
  workflow_run:
    workflows: ["Update version"]  
    types: [completed]
    branches:
      - master

jobs:
  notify:
    name: Notify in telegram
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'  

    steps:
      - name: Get branch names
        id: branch-names
        uses: tj-actions/branch-names@v8

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY.MM.DD HH:mm:ss
          utcOffset: "+03:00" 

      - name: Use current time
        env:
          TIME: "${{ steps.current-time.outputs.time }}"
          R_TIME: "${{ steps.current-time.outputs.readableTime }}"
          F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
          YEAR: "${{ steps.current-time.outputs.year }}"
          DAY: "${{ steps.current-time.outputs.day }}"
        run: echo $TIME $R_TIME $F_TIME $YEAR $DAY

      - name: Checkout on release
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_sha }}  

      - name: Get current version
        id: version
        run: |
          echo "current_version=$(cat version)" >> $GITHUB_OUTPUT

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get latest Docker tag
        id: docker-tag
        run: |
          REPO="pipeline"
          DOCKERHUB_TOKEN="${{ secrets.DOCKER_TOKEN }}"
          DOCKER_USERNAME="${{ secrets.DOCKER_USERNAME }}"
          echo "Fetching tags for $DOCKER_USERNAME/$REPO with token: $DOCKERHUB_TOKEN" >> $GITHUB_STEP_SUMMARY
          
          RESPONSE=$(curl -s -H "Authorization: JWT $DOCKERHUB_TOKEN" "https://hub.docker.com/v2/repositories/$DOCKER_USERNAME/$REPO/tags/?page_size=100&page=1&ordering=-last_updated")
          echo "Full API Response: $RESPONSE" >> $GITHUB_STEP_SUMMARY
          
          if [ -n "$RESPONSE" ] && echo "$RESPONSE" | jq -e '.results | length > 0' > /dev/null 2>&1; then
            ALL_TAGS=$(echo "$RESPONSE" | jq -r '.results[].name' | grep -E '^v[0-9]+' || echo "$RESPONSE" | jq -r '.results[].name')
            echo "All tags: $ALL_TAGS" >> $GITHUB_STEP_SUMMARY
            LATEST_TAG=$(echo "$ALL_TAGS" | sort -V -r | head -n 1)
            if [ -z "$LATEST_TAG" ] || [ "$LATEST_TAG" == "null" ]; then
              LATEST_TAG="${{ steps.version.outputs.current_version }}"
              echo "No valid tag found starting with 'v', using version from file: $LATEST_TAG" >> $GITHUB_STEP_SUMMARY
            else
              echo "Latest tag from Docker Hub (sorted): $LATEST_TAG" >> $GITHUB_STEP_SUMMARY
            fi
          else
            LATEST_TAG="${{ steps.version.outputs.current_version }}"
            echo "No tags found in Docker Hub or API error, using version from file: $LATEST_TAG" >> $GITHUB_STEP_SUMMARY
          fi
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      
      - name: send telegram message when PR
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: html
          document: changelog.md
          message: |           
            <b>Новый выпуск изменений</b>
            <b>Проект</b>: <a href="https://github.com/${{ github.repository }}"><code>${{ github.event.repository.name }}</code></a>
            <b>Версия</b>: <a href="https://github.com/${{ github.repository }}/blob/${{ github.event.workflow_run.head_sha }}/version"><code>${{ steps.version.outputs.current_version }}</code></a>
            <b>Дата</b>: <code>${{ steps.current-time.outputs.formattedTime }}</code>
            <b>Автор</b>: <a href="https://github.com/${{ github.event.pull_request.user.login }}">${{ github.event.pull_request.user.login }}</a>
            <b>Описание изменений:</b> ${{ github.event.pull_request.title }}

            <b>Информация о Git-репозитории</b>
            <b>GIT MR</b>: <a href="${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.pull_request.number }}">${{ github.event.pull_request.number }}</a>
            <b>GIT TAG</b>: <a href="https://github.com/${{ github.repository }}/blob/${{ github.event.workflow_run.head_sha }}/version"><code>${{ steps.version.outputs.current_version }}</code></a>
            
            <b>Информация о Docker-репозитории</b>
            <b>Владелец</b>: <a href="https://hub.docker.com/repositories/${{ secrets.DOCKER_USERNAME }}">${{ secrets.DOCKER_USERNAME }}</a>
            <b>Название</b>: <a href="https://hub.docker.com/r/${{ secrets.DOCKER_USERNAME }}/pipeline">pipeline</a>
            <b>Тег</b>: <a href="https://hub.docker.com/repository/docker/${{ secrets.DOCKER_USERNAME }}/pipeline/tags">${{ steps.docker-tag.outputs.latest_tag }}</a>
            <b>Полное имя</b>: <a href="https://hub.docker.com/repository/docker/${{ secrets.DOCKER_USERNAME }}/pipeline/tags">${{ secrets.DOCKER_USERNAME }}/pipeline:${{ steps.docker-tag.outputs.latest_tag }}</a>
